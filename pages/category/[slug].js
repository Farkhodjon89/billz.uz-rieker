import Layout from "../../components/Layout";
import MainSlider from "../../components/MainSlider";
import CategoriesBlock from "../../components/CategoriesBlock";
import SectionTitle from "../../components/SectionTitle";
import ProductSlider from "../../components/ProductSlider";
import Banner from "../../components/Banner";
import client from "../../apollo/apollo-client";
import PAGESETTINGS from "../../queries/categoryPageSettings";
import { StaticDataSingleton } from "../../utils/staticData";
import PRODUCTS from "../../queries/products";
import { HeadData } from "../../components/Head";
import { useRouter } from "next/router";

const CategoryPage = ({
  SliderData,
  PopularCategories,
  BannerOne,
  BannerTwo,
  BannerThree,
  categories,
  newProducts,
  products,
  saleProducts,
}) => {
  const router = useRouter();
  const { slug } = router.query;
  const ActivCategory = categories.find((c) => c.slug === slug);
  let seo = {};
  console.log(ActivCategory.name);
  switch (ActivCategory.name) {
    case "–ñ–µ–Ω—Å–∫–∏–π":
      seo = {
        title: "–ë—Ä–µ–Ω–¥–æ–≤–∞—è –∂–µ–Ω—Å–∫–∞—è –æ–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å | FCN",
        description:
          "–ú–æ–¥–Ω–∞—è –∂–µ–Ω—Å–∫–∞—è –æ–¥–µ–∂–¥–∞ –∏ –∂–µ–Ω—Å–∫–∞—è –æ–±—É–≤—å –æ—Ç –º–∏—Ä–æ–≤—ã—Ö –±—Ä–µ–Ω–¥–æ–≤, –≤ –¢–∞—à–∫–µ–Ω—Ç–µ. –ö—É–ø–∏—Ç–µ –±—Ä–µ–Ω–¥–æ–≤—É—é –∂–µ–Ω—Å–∫—É—é –æ–¥–µ–∂–¥—É –∏ –ª–æ–≤–∏—Ç–µ –Ω–∞ —Å–µ–±–µ –≤–∑–≥–ª—è–¥—ã –ø–æ–∫–ª–æ–Ω–Ω–∏–∫–æ–≤! üòç",
      };
      break;
    case "–ú—É–∂—Å–∫–æ–π":
      seo = {
        title: "–ë—Ä–µ–Ω–¥–æ–≤–∞—è –º—É–∂—Å–∫–∞—è –æ–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å | FCN",
        description:
          "–ú–∞–≥–∞–∑–∏–Ω –º—É–∂—Å–∫–æ–π –æ–¥–µ–∂–¥—ã –∏ –º—É–∂—Å–∫–æ–π –æ–±—É–≤–∏ –≤ –¢–∞—à–∫–µ–Ω—Ç–µ. –ö—É–ø–∏—Ç—å –±—Ä–µ–Ω–¥–æ–≤—É—é –º—É–∂—Å–∫—É—é –æ–¥–µ–∂–¥—É –æ—Ç Lacoste, Mango, Gant‚Ä¶ –û–±–Ω–æ–≤–∏ –≥–∞—Ä–¥–µ—Ä–æ–± –∏ –ø–æ–∫–æ—Ä—è–π —Å–µ—Ä–¥—Ü–∞! ‚ù§",
      };
      break;
    case "–î–µ–≤–æ—á–∫–∞":
      seo = {
        title: "–ë—Ä–µ–Ω–¥–æ–≤–∞—è –æ–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å –¥–ª—è –¥–µ–≤–æ—á–∫–∏ | FCN",
        description:
          "–ú–æ–¥–Ω–∞—è –¥–µ—Ç—Å–∫–∞—è –æ–¥–µ–∂–¥–∞ –∏ –±—Ä–µ–Ω–¥–æ–≤–∞—è –æ–±—É–≤—å  –¥–ª—è –¥–µ–≤–æ—á–µ–∫. –ö—É–ø–∏—Ç–µ –æ–¥–µ–∂–¥—É –¥–ª—è –¥–µ–≤–æ—á–∫–∏ –æ—Ç –º–∏—Ä–æ–≤—ã—Ö –±—Ä–µ–Ω–¥–æ–≤. –í–∞—à–∞ –ø—Ä–∏–Ω—Ü–µ—Å—Å–∞ –±—É–¥–µ—Ç —Å–∏—è—Ç—å –æ—Ç —Å—á–∞—Å—Ç—å—è! üòç",
      };
      break;
    case "–ú–∞–ª—å—á–∏–∫":
      seo = {
        title: "–ë—Ä–µ–Ω–¥–æ–≤–∞—è –æ–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å –¥–ª—è –º–∞–ª—å—á–∏–∫–∞ | FCN",
        description:
          "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω –º–æ–¥–Ω–æ–π –æ–¥–µ–∂–¥—ã –¥–ª—è –º–∞–ª—å—á–∏–∫–∞. –ö—É–ø–∏—Ç–µ —Å—Ç–∏–ª—å–Ω—É—é –æ–¥–µ–∂–¥—É –∏ –±—Ä–µ–Ω–¥–æ–≤—É—é –æ–±—É–≤—å –¥–ª—è —Ä–µ–±–µ–Ω–∫–∞. –í–∞—à –º–∞–ª—å—á–∏–∫ –±—É–¥–µ—Ç —Å–∞–º—ã–º —Å—Ç–∏–ª—å–Ω—ã–º! üòé",
      };
      break;
  }

  return (
    <>
      <HeadData
        title={seo.title}
        description={seo.description}
        pageUrl={`/category/${slug}`}
      />
      <Layout categories={categories}>
        <MainSlider SliderData={SliderData} />
        <div className="container">
          <SectionTitle title="–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏" />
          <CategoriesBlock categories={PopularCategories} />
          <SectionTitle title="–ù–æ–≤—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è" />
          <ProductSlider products={newProducts} />
          <Banner
            img={BannerOne.image.sourceUrl}
            brand={BannerOne.brand ? BannerOne.brand.sourceUrl : null}
            title={BannerOne.title}
            subTitle={BannerOne.subtitle}
            buttonTitle="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥"
            url={BannerOne.link}
            style="1"
          />
          <SectionTitle title="—Å—Ç–∏–ª—å–Ω—ã–π –ª—É–∫ —Å–µ–∑–æ–Ω–∞" />
          <Banner
            img={BannerTwo.image.sourceUrl}
            title={BannerTwo.title}
            buttonTitle="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥"
            url={BannerTwo.link}
            style="3"
            noMargin={true}
          />
          <ProductSlider products={products} />
          <Banner
            img={BannerThree.image.sourceUrl}
            brand={BannerThree.brand ? BannerThree.brand.sourceUrl : null}
            title={BannerThree.title}
            buttonTitle="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥"
            url={BannerThree.link}
            style="2"
          />
          <SectionTitle title="—Ç–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π" />
          <ProductSlider products={saleProducts} />
        </div>
      </Layout>
    </>
  );
};

export default CategoryPage;

export const getStaticPaths = async () => {
  const paths = ["zhenskij", "muzhskoj", "malchik", "devochka"].map((x) => ({
    params: { slug: x },
  }));
  return {
    paths,
    fallback: false,
  };
};

export async function getStaticProps({ params }) {
  const staticData = new StaticDataSingleton();
  await staticData.checkAndFetch(true);

  const categories = staticData.getRootCategories();

  const newProducts = await client.query({
    query: PRODUCTS,
    fetchPolicy: "no-cache",
    variables: {
      first: 10,
      categories: [params.slug],
    },
  });

  const products = await client.query({
    query: PRODUCTS,
    fetchPolicy: "no-cache",
    variables: {
      first: 10,
      categories: [params.slug],
    },
  });

  const saleProducts = await client.query({
    query: PRODUCTS,
    fetchPolicy: "no-cache",
    variables: {
      first: 10,
      categories: [params.slug],
      onSale: true,
    },
  });

  const PageSettings = await client.query({
    query: PAGESETTINGS,
    fetchPolicy: "no-cache",
    variables: { id: params.slug },
  });

  return {
    props: {
      SliderData: PageSettings.data.productCategory.category_settings.slider,
      PopularCategories:
        PageSettings.data.productCategory.category_settings.popularCategories,
      BannerOne: PageSettings.data.productCategory.category_settings.bannerone,
      BannerTwo: PageSettings.data.productCategory.category_settings.bannertwo,
      BannerThree:
        PageSettings.data.productCategory.category_settings.bannerthree,
      categories: categories.allCategories,
      newProducts: newProducts.data.products.nodes,
      products: products.data.products.nodes,
      saleProducts: saleProducts.data.products.nodes,
    },
    revalidate: 60,
  };
}
